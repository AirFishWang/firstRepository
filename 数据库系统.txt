(1)3种数据模型：概念模型，逻辑模型和物理模型
(2)数据模型的组成要素：数据结构，数据操作以及数据的完整性约束条件
(3)码：唯一标识实体的属性集称为码(注意是属性集)
(4)概念模型的一种表示方法：实体——联系方法(E-R图， Entity-Relationship)
(5)逻辑模型：层次模型，网状模型，关系模型，面向对象模型，对象关系模型(层次模型和网状模型为非关系模型)
(6)关系数据库的数据结构：关系(对应一张表)，元组(一行记录)，属性
(7)模式：反应的是数据的结构和联系
(8)数据库系统的三级模式结构:外模式、模式和内模式，一个数据库系统只有一个模式和内模式，可以有多个外模式，外模式是模式的一个子集
    数据库系统的三级模式结构是指数据库系统是由模式、外模式和内模式三级构成的。 
    模式：模式也称逻辑模式或概念模式，是数据库中全体数据的逻辑结构和特征的描述，是所有用户的公共数据视图。 
    模式实际上是数据库数据在逻辑级上的视图。一个数据库只有一个模式。定义模式时不仅要定义数据的逻辑结构，而且要定义数据之间的联系，定义与数据有关的安全性、完整性要求。 
    外模式:外模式也称用户模式，它是数据库用户能够看见和使用的局部数据的逻辑结构和特征的描述，是数据库用户的数据视图，是与某一应用有关的数据的逻辑表示。 外模式通常是模式的子集。一个数据库可以有多个外模式。应用程序都是和外模式打交道的。外模式是保证数据库安全性的一个有力措施。每个用户只能看见和访问所对应的外模式中的数据，数据库中的其余数据对他们是不可见的。 
    内模式:内模式也称存储模式，一个数据库只有一个内模式。它是数据物理结构和存储方式的描述，是数据在数据库内部的表示方式。例如，记录的存储方式是顺序结构存储还是B树结构存储；索引按什么方式组织；数据是否压缩，是否加密；数据的存储记录结构有何规定等。 
(9)数据库的二级映像功能与数据独立性 为了能够在内部实现数据库的三个抽象层次的联系和转换，数据库管理系统在这三级模式之间提供了两层映像。 
    外模式／模式映像 对应于同一个模式可以有任意多个外模式。对于每一个外模式，数据库系统都有一个外模式／模式映像，它定义了该外模式与模式之间的对应关系。 当模式改变时，由数据库管理员对各个外模式／模式映像作相应的改变，可以使外模式保持不变。应用程序是依据数据的外模式编写的，从而应用程序可以不必修改，保证了数据与程序的逻辑独立性。 
    模式／内模式映像 数据库中只有一个模式，也只有一个内模式，所以模式／内模式映像是惟一的，它定义了数据库的全局逻辑结构与存储结构之间的对应关系。当数据库的存储结构改变时，由数据库管理员对模式/内模式映像做相应改变，可以使模式保持不变，从而应用程序也不必修改。保证了数据与程序的物理独立性。 
    在数据库的三级模式结构中，数据库模式即全局逻辑结构是数据库的中心与关键，它独立于数据库的其他层次。因此，涉及数据库模式结构时应首先确定数据库的逻辑结构。
(10)候选码与码的概念是一样的，即唯一标识实体的属性组，一个关系中可以有多个候选码，候选码的属性为主属性，从所有候选码中选一个作为主码
(11)基本关系操作：选择，投影，并， 差， 笛卡尔积
(12)关系的三类完整性约束：实体完整性(主码属性不为空)，参照完整性(外码问题)和用户定义完整性(例如成绩在0到100之间)
(13)一般连接 <= 等值连接 <= 自然连接
(14)视图：视图是从一个或几个基本表导出对的表，本身不独立存储在数据库之中，数据库中只存放视图的定义而不存放视图对应的数据，数据仍然存放在基本表中，视图是一个虚表，
(15)若主码是多个属性组成，在使用SQL语句创建表时必须在表级完整性约束定义
(16)不好的关系模式设计会导致数据冗余，更新异常，插入异常，删除异常
(17)完全函数依赖：非主属性必须由主码中所有属性组合决定，例如成绩必须由学号和课程号来共同决定(学号和课程号组成主码)
    部分函数依赖：在学号和课程号为主码的表中，如果有学生所在系属性，由于学号便可以决定所在系，并不需要主码的全部属性，所以是部分函数依赖
(18)范式：关系数据库设计时满足的一些条件，满足不同程度的条件为不同的范式。
        一个低一级的范式可以通过模式分解为若干个高一级范式的关系模式的集合，这种过程叫着规范化
    1NF: 所有分量是不可分的数据项
    2NF: 每一个非主属性完全依赖于码
    3NF：每一个非主属性既不部分依赖于码，也不传递依赖于码(学号->专业->位置关系 属于2NF但不属于3NF，因为有传递依赖)
    BCNF：
    4NF：
    5NF：
    
    1NF->2NF: 消除非主属性对码的部分函数依赖
    2NF->3NF: 消除非主属性对码的传递函数依赖
    3NF->BCNF:消除主属性对码的部分和传递依赖
    BCNF->4NF:消除非平凡且非函数依赖的多值依赖
(19)什么是事务：事务是用户定义的一个数据库操作序列，可以是一条SQL语句，一组SQL语句或者整个程序
    原子性(Atomicity)：事务是数据库的逻辑工作单位，要么做要么不做。
    一致性(Consistency):事务执行的结果必须是使数据库从一个一致性状态变到另一个一致性状态，例如转账问题
    隔离型(Isolation):一个事务的执行不能被其他事务干扰
    持久性(Durability): 事务一旦提交，对数据库的改变是永久的
    事务是恢复和并发控制的基本单位。
    
